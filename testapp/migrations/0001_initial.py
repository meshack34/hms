# Generated by Django 4.2.5 on 2023-11-29 17:42

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Access_site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_site', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AddDrugs_Dialysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('visit_id', models.CharField(max_length=100)),
                ('medicine_name', models.CharField(max_length=200)),
                ('rout', models.CharField(blank=True, max_length=200, null=True)),
                ('dosage_pr_adm', models.CharField(max_length=200)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=200, null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=200, null=True)),
                ('quantity', models.CharField(blank=True, max_length=200, null=True)),
                ('administered_by', models.CharField(blank=True, max_length=200, null=True)),
                ('doctor', models.CharField(blank=True, max_length=200, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_mobile_number', models.CharField(max_length=40)),
                ('title_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('gender', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('mobile_number', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Adv_Visit_Creation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('advance_pay', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('advice', models.TextField()),
                ('follow_up_date', models.DateField()),
                ('follow_check_box', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='AdvPatientVisitMains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_date_time', models.DateTimeField(auto_now_add=True)),
                ('visit_id', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Anticoagulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anticoagulation_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.IntegerField()),
                ('appointment_number', models.BigIntegerField()),
                ('reason_for_appointment', models.CharField(max_length=200)),
                ('appointment_time', models.TimeField()),
                ('status', models.CharField(max_length=100)),
                ('patient_come_into_hospital', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('doctor_comment', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Asset_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_name', models.CharField(max_length=100)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityIntradayScheduleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot_id', models.CharField(max_length=100)),
                ('time_slot_start_time', models.CharField(max_length=100)),
                ('time_slot_end_time', models.CharField(max_length=100)),
                ('doctor_id', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AvailableDayScheduleMasterTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.CharField(max_length=100)),
                ('dates_available', models.CharField(max_length=5000)),
                ('schedule_id_of_each_slot', models.CharField(max_length=5000)),
                ('time_slots', models.CharField(max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='BankMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_id', models.CharField(max_length=100)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_created_by', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='BedCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward_type', models.CharField(max_length=100)),
                ('ward_cat', models.CharField(max_length=100)),
                ('bed_no', models.CharField(max_length=100)),
                ('bed_charge', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BedChargeSlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('admission_ID', models.CharField(max_length=100)),
                ('ward_type', models.CharField(max_length=100)),
                ('ward_cat', models.CharField(max_length=100)),
                ('bed_no', models.CharField(max_length=100)),
                ('bed_charge', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField()),
                ('status', models.CharField(default='generated', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BedChargeSlip_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('admission_ID', models.CharField(max_length=100)),
                ('ward_type', models.CharField(max_length=100)),
                ('ward_cat', models.CharField(max_length=100)),
                ('bed_no', models.CharField(max_length=100)),
                ('bed_charge', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='BillingGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_group_id', models.CharField(max_length=50, unique=True)),
                ('billing_group', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('In Active', 'In Active')], default='Active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BillingGroupCorporateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inactive', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='BillingGroupTariffLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inactive', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='BloodMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group_id', models.CharField(max_length=100)),
                ('blood_group', models.CharField(max_length=100)),
                ('blood_group_description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='BookedAppointments',
            fields=[
                ('admin', models.CharField(blank=True, max_length=200, null=True)),
                ('patient_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('patient_gender', models.CharField(blank=True, max_length=200)),
                ('patient_appointment_date', models.DateField()),
                ('patient_appointment_id', models.CharField(max_length=200)),
                ('patient_age', models.IntegerField()),
                ('patient_mobile_number', models.CharField(max_length=15)),
                ('patient_email_id', models.EmailField(max_length=254)),
                ('patient_schedule_date_and_time', models.CharField(max_length=200)),
                ('patient_scheduled_id', models.CharField(max_length=200)),
                ('patient_payment_mode', models.CharField(max_length=200)),
                ('doctor_name', models.CharField(max_length=200)),
                ('doctor_department', models.CharField(max_length=200)),
                ('status', models.CharField(blank=True, default='appointed', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BranchMaster',
            fields=[
                ('branch_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=200)),
                ('branch_type', models.CharField(choices=[('HOSPITAL', 'Hospital'), ('CLINIC', 'Clinic'), ('PHARMACY', 'Pharmacy'), ('LAB', 'Lab')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Bruit_thrill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bruit_thrill', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CancelBillRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CancelOpdBillingMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=50)),
                ('bill_id', models.CharField(max_length=50)),
                ('bill_date_time', models.CharField(max_length=50)),
                ('uhid', models.CharField(max_length=50)),
                ('temp_bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(max_length=50)),
                ('corporate_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_group_id', models.CharField(blank=True, max_length=50, null=True)),
                ('package_profile_id', models.CharField(blank=True, max_length=50, null=True)),
                ('net_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(max_length=50)),
                ('pay_amount', models.CharField(max_length=50)),
                ('paid_amount', models.CharField(max_length=50)),
                ('outstanding_amount', models.CharField(max_length=50)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('paid_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('paid_amt_update_date', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CannulationNurse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nurse_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CaseSummery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('patient_name', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('hosp_no', models.CharField(max_length=100)),
                ('tel_no', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('d_o_a', models.CharField(max_length=100)),
                ('d_o_d', models.CharField(max_length=100)),
                ('consultant', models.CharField(max_length=100)),
                ('dept', models.CharField(max_length=100)),
                ('medical_history', models.CharField(max_length=100)),
                ('physi_find', models.CharField(max_length=100)),
                ('investigation', models.CharField(max_length=100)),
                ('management', models.CharField(max_length=100)),
                ('treat_discharge', models.CharField(max_length=100)),
                ('recommendation', models.CharField(max_length=100)),
                ('follow_up', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('name_sign', models.CharField(max_length=100)),
                ('doctor_notes', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Cash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_payable_amt', models.FloatField()),
                ('paid_amt', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CentralisedAdminView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(auto_now_add=True)),
                ('Max_Token', models.IntegerField()),
                ('Token_Issued', models.IntegerField()),
                ('Current_In', models.IntegerField()),
                ('Next_Waiting', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Chemotherapy_treatment_sheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('patient_name', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('stage', models.CharField(max_length=100)),
                ('weight', models.CharField(max_length=100)),
                ('height', models.CharField(max_length=100)),
                ('BSA', models.CharField(max_length=100)),
                ('histology', models.CharField(max_length=100)),
                ('drugs', models.CharField(max_length=100)),
                ('dose_m2', models.CharField(max_length=100)),
                ('notes', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Chemotherapy_treatment_sheet_sub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('date', models.CharField(max_length=100)),
                ('bp', models.CharField(max_length=100)),
                ('p_temp', models.CharField(max_length=100)),
                ('wht', models.CharField(max_length=100)),
                ('wbc', models.CharField(max_length=100)),
                ('hb', models.CharField(max_length=100)),
                ('plt', models.CharField(max_length=100)),
                ('uec', models.CharField(max_length=100)),
                ('remark1', models.CharField(max_length=100)),
                ('remark2', models.CharField(max_length=100)),
                ('remark3', models.CharField(max_length=100)),
                ('remark4', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CityMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=500)),
                ('status', models.CharField(blank=True, choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalOrDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_department', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Closing_Attendent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closing_attendent', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Completion_Status_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_Status', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Consent_KidneyDialysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_address', models.CharField(max_length=600)),
                ('age', models.CharField(max_length=100)),
                ('sex', models.CharField(max_length=100)),
                ('admission_no', models.CharField(max_length=100)),
                ('name1', models.CharField(max_length=100)),
                ('blood_sample', models.CharField(blank=True, max_length=100, null=True)),
                ('PO_box_no', models.CharField(blank=True, max_length=100, null=True)),
                ('name2', models.CharField(max_length=100)),
                ('signature', models.CharField(blank=True, max_length=100, null=True)),
                ('id_no', models.CharField(blank=True, max_length=100, null=True)),
                ('next_kin', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=100, null=True)),
                ('witnessed_admitted_nurse', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentChemotherapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_nhif_id', models.CharField(max_length=100)),
                ('patient_national_id', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('patient_email', models.CharField(max_length=100)),
                ('diagnosis', models.TextField(max_length=200)),
                ('chemotherapy_protocol', models.TextField(max_length=500)),
                ('inform_by_dr', models.CharField(max_length=100)),
                ('i_have', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('patient_sign', models.CharField(max_length=100)),
                ('patient_relative_sign', models.CharField(max_length=100)),
                ('witness', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Contributing_Factors_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributing_factor', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CorporateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_ID', models.IntegerField()),
                ('corporate_Name', models.CharField(max_length=255, unique=True)),
                ('valid_Upto', models.DateField()),
                ('contact_No', models.BigIntegerField()),
                ('email_ID', models.EmailField(max_length=200)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('cash_credit', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit', 'Credit')], max_length=30, null=True)),
                ('inactive', models.BooleanField()),
                ('Office_Location_Name', models.CharField(max_length=200)),
                ('Auth_Person', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=500)),
                ('PinCode', models.IntegerField()),
                ('phone_no', models.BigIntegerField()),
                ('fax', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CountryMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreateAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=1000)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='CreateUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('f_name', models.CharField(max_length=100, verbose_name='Item Description')),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('create_datatime', models.DateTimeField(default=datetime.datetime.now)),
                ('signature', models.ImageField(upload_to='user_sign/')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=100)),
                ('date_of_join', models.DateField(default=datetime.datetime.now)),
                ('date_of_living', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance', models.CharField(choices=[('EMERGENCY_ACUTE', 'EMERGENCY_ACUTE')], max_length=100)),
                ('type', models.CharField(choices=[('PRINCIPAL', 'PRINCIPAL')], max_length=100)),
                ('category', models.CharField(choices=[('PRIMARY', 'PRIMARY')], max_length=100)),
                ('diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('D_GRG_Code', models.CharField(max_length=100)),
                ('state_of_diagnosis', models.CharField(choices=[('PRINCIPAL', 'PRINCIPAL')], max_length=100)),
                ('adverse_effect', models.CharField(choices=[('PRIMARY', 'PRIMARY')], max_length=100)),
                ('visit_date', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_id', models.CharField(max_length=50, unique=True)),
                ('diagnosis_name', models.CharField(max_length=200, unique=True)),
                ('icd_10_code', models.CharField(max_length=50)),
                ('icd_11_code', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=50, null=True)),
                ('D_GRG_Code', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dialysate_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dialysis_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Dialysis_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('dialysis_start', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('start_attendant', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('machine', models.CharField(max_length=100)),
                ('machine_status', models.CharField(max_length=100)),
                ('min_bp_time', models.CharField(max_length=100)),
                ('min_bp', models.CharField(max_length=100)),
                ('average_pulse', models.CharField(max_length=100)),
                ('average_vp', models.CharField(max_length=100)),
                ('avg_dial_pressure', models.CharField(max_length=100)),
                ('server_time', models.CharField(max_length=100)),
                ('post_equip_preparation', models.CharField(max_length=100)),
                ('completion_status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Dialyzer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dialyzer', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='discharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('admission_id', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('LAMA', 'LAMA'), ('DAMA', 'DAMA'), ('expired', 'Expired'), ('Normal', 'Normal')], max_length=100)),
                ('discharge_datetime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DistrictMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor_Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
                ('diagnosis', models.CharField(blank=True, max_length=1000, null=True)),
                ('duration_on_dialysis', models.CharField(blank=True, max_length=1000, null=True)),
                ('current_medications', models.CharField(blank=True, max_length=1000, null=True)),
                ('general_status', models.CharField(blank=True, max_length=500, null=True)),
                ('access_site', models.CharField(blank=True, max_length=500, null=True)),
                ('bp', models.CharField(blank=True, max_length=500, null=True)),
                ('QB_rate', models.CharField(blank=True, max_length=500, null=True)),
                ('ultrafiltration', models.CharField(blank=True, max_length=500, null=True)),
                ('investication', models.CharField(blank=True, max_length=500, null=True)),
                ('plan', models.CharField(blank=True, max_length=5000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorAccountingTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('p_name', models.CharField(max_length=50)),
                ('p_age', models.CharField(max_length=50)),
                ('p_gender', models.CharField(max_length=50)),
                ('dr_share1', models.CharField(blank=True, max_length=50, null=True)),
                ('dr_share2', models.CharField(blank=True, max_length=50, null=True)),
                ('dr_share3', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_no', models.CharField(max_length=50)),
                ('bill_date_time', models.CharField(max_length=50)),
                ('service_name', models.CharField(blank=True, max_length=50, null=True)),
                ('service_charge', models.CharField(blank=True, max_length=50, null=True)),
                ('dr_share', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorTable',
            fields=[
                ('doctor_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('doctor_email_address', models.EmailField(max_length=200)),
                ('doctor_name', models.CharField(max_length=100)),
                ('doctor_profile_image', models.ImageField(upload_to='images/')),
                ('doctor_sign_image', models.ImageField(upload_to='images/')),
                ('doctor_phone_no', models.BigIntegerField(blank=True, null=True)),
                ('doctor_appointment', models.DateField(blank=True, null=True)),
                ('doctor_address', models.CharField(max_length=500)),
                ('doctor_date_of_birth', models.DateField()),
                ('doctor_department', models.CharField(max_length=100)),
                ('doctor_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=100)),
                ('doctor_fee', models.FloatField()),
                ('doctor_registration_no', models.CharField(max_length=200)),
                ('registration_exparing_date', models.DateField()),
                ('doctor_register_by', models.CharField(choices=[('IMC', 'Indian Medical Council'), ('SMC', 'State Medical Council')], max_length=200)),
                ('doctor_location', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doctor_belogns_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.branchmaster')),
            ],
        ),
        migrations.CreateModel(
            name='EmrInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_date', models.DateTimeField(blank=True, null=True)),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('record_type', models.CharField(blank=True, choices=[('OPD', 'OPD'), ('IPD', 'IPD')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estimate_bill_mains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=30)),
                ('age', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=30)),
                ('contact_no', models.CharField(max_length=30)),
                ('services', models.CharField(max_length=300)),
                ('services_rate', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Estimate_bill_temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=30)),
                ('age', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=30)),
                ('contact_no', models.CharField(max_length=30)),
                ('services', models.CharField(max_length=300)),
                ('services_rate', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='GenderMater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Gender', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Generic_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generic_name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupMaster',
            fields=[
                ('group_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Heparin_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heparine_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('Past_Medical_Surgical', models.CharField(max_length=500)),
                ('Family_History', models.CharField(max_length=500)),
                ('Paediatric_History', models.CharField(max_length=500)),
                ('Gynaec_Obstetric_History', models.CharField(max_length=500)),
                ('socioeconomic_history', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryAndExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('general_examination', models.CharField(max_length=500)),
                ('Cardiovascular', models.CharField(max_length=500)),
                ('Respiration', models.CharField(max_length=500)),
                ('gastrointestinal_system', models.CharField(max_length=500)),
                ('genitourinary_system', models.CharField(max_length=500)),
                ('Musculoskeletal', models.CharField(max_length=500)),
                ('integumentary', models.CharField(max_length=500)),
                ('central_nervous_system', models.CharField(max_length=500)),
                ('ENT', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HolidayMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_id', models.CharField(blank=True, max_length=20, null=True)),
                ('holiday_type', models.CharField(max_length=200)),
                ('holiday_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Incident_Creation_Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_id', models.CharField(max_length=50)),
                ('submitter_name', models.CharField(max_length=50)),
                ('incident_reported_date', models.CharField(max_length=50)),
                ('incident_date', models.CharField(max_length=50)),
                ('incident_location', models.CharField(max_length=50)),
                ('affected_people', models.CharField(max_length=50)),
                ('responsible_dept', models.CharField(max_length=50)),
                ('incident_description', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Incident_Type_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Informed_Consent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.CharField(blank=True, max_length=100, null=True)),
                ('mental_state', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_performing', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('explain_parent_patient', models.CharField(blank=True, max_length=1000, null=True)),
                ('intened_benefits', models.CharField(blank=True, max_length=1000, null=True)),
                ('serious_risk', models.CharField(blank=True, max_length=1000, null=True)),
                ('extra_procedure', models.CharField(blank=True, max_length=1000, null=True)),
                ('alternative_treatment', models.CharField(blank=True, max_length=1000, null=True)),
                ('date2', models.CharField(blank=True, max_length=100, null=True)),
                ('time2', models.CharField(blank=True, max_length=100, null=True)),
                ('mental_state2', models.CharField(blank=True, max_length=1000, null=True)),
                ('administering_sedation', models.CharField(blank=True, max_length=1000, null=True)),
                ('mode_of_anasthesia', models.CharField(blank=True, max_length=100, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dr_explain_procedure', models.CharField(blank=True, max_length=1000, null=True)),
                ('benefites_mode_anasthesia', models.CharField(blank=True, max_length=1000, null=True)),
                ('alternative', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_qstn', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_explain', models.CharField(blank=True, max_length=1000, null=True)),
                ('name_of_doctor', models.CharField(blank=True, max_length=100, null=True)),
                ('doctor_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('date3', models.CharField(blank=True, max_length=100, null=True)),
                ('time3', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_accept_procedure', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_signature', models.CharField(blank=True, max_length=100, null=True)),
                ('date4', models.CharField(blank=True, max_length=100, null=True)),
                ('time4', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_upderstand_procedure', models.CharField(blank=True, max_length=100, null=True)),
                ('signature_self', models.CharField(blank=True, max_length=100, null=True)),
                ('date5', models.CharField(blank=True, max_length=100, null=True)),
                ('time5', models.CharField(blank=True, max_length=100, null=True)),
                ('signature_guardian', models.CharField(blank=True, max_length=100, null=True)),
                ('date6', models.CharField(blank=True, max_length=100, null=True)),
                ('time6', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ins_Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Insurance_CheckList_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, editable=False, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IntraDialysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('visit_id', models.CharField(max_length=30)),
                ('status', models.CharField(max_length=30)),
                ('completion_status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='IntraDialysisPerHourInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=50)),
                ('bp_mmhg1', models.CharField(max_length=50)),
                ('bp_mmhg2', models.CharField(max_length=50)),
                ('bp_time', models.CharField(max_length=50)),
                ('pulse', models.CharField(max_length=50)),
                ('total_uf_removal', models.CharField(max_length=50)),
                ('uf_rate', models.CharField(max_length=50)),
                ('blood_pump_flow_rate', models.CharField(max_length=50)),
                ('heparine_pump_infusion_rate', models.CharField(max_length=50)),
                ('dialysate_temp', models.CharField(max_length=50)),
                ('conductivity', models.CharField(max_length=50)),
                ('venus_pressure', models.CharField(max_length=50)),
                ('dialysate_pressure', models.CharField(max_length=50)),
                ('tmp', models.CharField(max_length=50)),
                ('dialysis_time', models.CharField(max_length=50)),
                ('dialysis_flow_rate', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory_ItemMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belongs_to', models.CharField(max_length=100)),
                ('item_category', models.CharField(max_length=100)),
                ('item_name', models.CharField(max_length=100)),
                ('shortcode', models.CharField(max_length=100)),
                ('packing', models.CharField(max_length=100)),
                ('contain', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=100)),
                ('conversion_factor', models.CharField(max_length=100)),
                ('hsn_code', models.CharField(max_length=100)),
                ('hsn_item_code', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=100)),
                ('tax', models.CharField(max_length=100)),
                ('num_of_reuse', models.CharField(max_length=100)),
                ('serial_batch_control', models.CharField(max_length=100)),
                ('reusable_rate', models.CharField(max_length=100)),
                ('min_quantity', models.CharField(max_length=100)),
                ('max_quantity', models.CharField(max_length=100)),
                ('re_order_level', models.CharField(max_length=100)),
                ('status', models.CharField(blank=True, max_length=100)),
                ('assets', models.CharField(blank=True, max_length=100)),
                ('expiry', models.CharField(max_length=100)),
                ('create_by', models.DateField(blank=True, null=True)),
                ('updated_by', models.DateField(blank=True, null=True)),
                ('is_reusable', models.CharField(max_length=100)),
                ('tpa', models.CharField(max_length=100)),
                ('service_charge', models.CharField(max_length=100)),
                ('autointent', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('investigation_and_procedure', models.CharField(max_length=200)),
                ('status', models.BooleanField()),
                ('result_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ot_required', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationProcedureTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('investigation_and_procedure', models.CharField(max_length=200)),
                ('status', models.BooleanField()),
                ('result_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ot_required', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item_Status_Report_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('date', models.DateTimeField()),
                ('particular', models.CharField(blank=True, max_length=50, null=True)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction', models.CharField(max_length=50)),
                ('closing_qty', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ItemBelongsToMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belongs_to', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategoryMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ItemLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_Id', models.CharField(max_length=100)),
                ('Item_name', models.CharField(choices=[('counter1', 'Counter1'), ('counter2', 'Counter2')], max_length=100)),
                ('store_name', models.CharField(choices=[('store1', 'Store1'), ('store2', 'Store2')], max_length=100)),
                ('location', models.CharField(choices=[('dept1', 'Dept1'), ('dept2', 'Dept2')], max_length=100)),
                ('remark', models.CharField(max_length=100)),
                ('inactive', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ItemManufact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufactures', models.CharField(choices=[('manufacturers1', 'manufacturers1'), ('manufacturers2', 'manufacturers2')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ItemManufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturers', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ItemSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppliers', models.CharField(choices=[('suppliers1', 'Suppliers1'), ('suppliers2', 'Suppliers2')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ItemUnitMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LabReportStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('bill_no', models.CharField(max_length=100)),
                ('report', models.FileField(upload_to='lab_report/')),
            ],
        ),
        migrations.CreateModel(
            name='LabResultEntry_records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(blank=True, max_length=100, null=True)),
                ('test_id', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_id', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_name', models.CharField(blank=True, max_length=100, null=True)),
                ('service_name', models.CharField(blank=True, max_length=100, null=True)),
                ('range', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('in_range', 'in_range'), ('out_range', 'out_range')], max_length=100)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('upadated_date_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Machine_name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Maintanence_Deatils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_name', models.CharField(max_length=100)),
                ('item_sub_id', models.CharField(max_length=100)),
                ('item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('item_model_no', models.CharField(max_length=100)),
                ('created_at', models.CharField(max_length=100)),
                ('due_date', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ManufactureTempTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacture', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatusMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marital_status', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MartialStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('martial_status', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalCertificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mc_templates', models.CharField(max_length=100)),
                ('authorize_dr', models.CharField(max_length=100)),
                ('finalized', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='MostCommonDocumentTypeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NameOfTheTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Mr', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.'), ('Dr', 'Dr.')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Needle_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('needle_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NewAppointmentByAdmin',
            fields=[
                ('appointment_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('patient_id', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=200)),
                ('middle_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('email_id', models.EmailField(max_length=200)),
                ('age', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=200)),
                ('mobile_number', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Nursing_Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('patient_name', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('diagnosis', models.CharField(max_length=100)),
                ('hosp_no', models.CharField(max_length=100)),
                ('chemotherapy_protocol', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Nursing_Notes_sub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('date_time', models.CharField(max_length=100)),
                ('nursing_notes', models.CharField(max_length=100)),
                ('name_sign', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingGetDelete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(max_length=50)),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(blank=True, max_length=50, null=True)),
                ('corporate_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_group_id', models.CharField(blank=True, max_length=50, null=True)),
                ('service_id', models.CharField(max_length=50)),
                ('charges', models.FloatField()),
                ('unit', models.IntegerField()),
                ('pay_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('outstanding_amount', models.FloatField(blank=True, null=True)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amount', models.FloatField()),
                ('discount', models.FloatField()),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('action_date_time', models.DateTimeField(auto_now_add=True)),
                ('service_name', models.CharField(max_length=50)),
                ('doctor', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('discount', models.IntegerField()),
                ('unit', models.IntegerField()),
                ('net_amount', models.FloatField()),
                ('co_pay', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('patient_amount', models.FloatField()),
                ('receive_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(blank=True, max_length=50, null=True)),
                ('service_name', models.CharField(blank=True, max_length=50, null=True)),
                ('rate', models.FloatField(blank=True, null=True)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('net_ammount', models.FloatField(blank=True, null=True)),
                ('outstanding_amount', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('receive_amount', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OPDBillSettlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('bill_no', models.CharField(max_length=50)),
                ('bill_date', models.CharField(max_length=50)),
                ('bill_amt', models.CharField(max_length=50)),
                ('claim_no', models.CharField(blank=True, max_length=300, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=300, null=True)),
                ('refrence_id', models.CharField(blank=True, max_length=300, null=True)),
                ('net_payable_amt', models.FloatField()),
                ('paid_amt', models.FloatField()),
                ('payment_amt', models.FloatField()),
                ('payment_mode', models.CharField(max_length=50)),
                ('status', models.BooleanField(choices=[('active', 'active'), ('inactive', 'inactive')])),
            ],
        ),
        migrations.CreateModel(
            name='OpdPackageMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=500)),
                ('package_amount', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OpdPaymentMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_mode', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PackagigMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_packing', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PAPSMEAR',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid_id', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('template', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_id', models.CharField(max_length=50)),
                ('datetime', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('facility', models.CharField(max_length=50)),
                ('state_on_condition', models.CharField(max_length=50)),
                ('doctor_knowledge', models.CharField(max_length=50)),
                ('doctor_kindness', models.CharField(max_length=50)),
                ('nurse_patience', models.CharField(max_length=50)),
                ('nurse_knowledge', models.CharField(max_length=50)),
                ('waiting_time', models.CharField(max_length=50)),
                ('hygiene', models.CharField(max_length=50)),
                ('improve_service', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PatientAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, choices=[('Drug', 'Drug'), ('Food', 'Food'), ('Insect', 'Insect'), ('Latex', 'Latex'), ('Mold', 'Mold')], max_length=100, null=True)),
                ('allergen', models.CharField(blank=True, choices=[('Drug', 'Drug'), ('Food', 'Food'), ('Insect', 'Insect'), ('Latex', 'Latex')], max_length=100, null=True)),
                ('reaction', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientBarCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('barcode', models.ImageField(blank=True, null=True, upload_to='barcodes/')),
            ],
        ),
        migrations.CreateModel(
            name='PatientImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_images', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='PatientInsDocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('billing_group', models.CharField(blank=True, max_length=100, null=True)),
                ('nhif_ins_corp_name', models.CharField(blank=True, max_length=100, null=True)),
                ('doc_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('p_images', models.ImageField(upload_to='profile/')),
            ],
        ),
        migrations.CreateModel(
            name='PatientsRegistrationsAllInOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=50)),
                ('patient_profile', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('registration_date_and_time', models.DateTimeField(auto_now_add=True)),
                ('blood_group', models.CharField(blank=True, max_length=50, null=True)),
                ('marital_status', models.CharField(max_length=50)),
                ('father_or_husband_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=300)),
                ('referred_by', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('pin_code', models.CharField(max_length=8)),
                ('aadhar_card', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('pan_card', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_mob_no', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_contact_number', models.CharField(blank=True, max_length=20)),
                ('nationality', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('staff_member', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('allow_photo_at_nursing_station', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('notable', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('in_cash', models.CharField(blank=True, max_length=100, null=True)),
                ('is_senior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_group', models.CharField(max_length=100)),
                ('nhif_ins_cor_name', models.CharField(blank=True, default='Cash', max_length=100)),
                ('nhif_ins_cor_id', models.CharField(blank=True, max_length=100, null=True)),
                ('card_number', models.CharField(blank=True, max_length=100, null=True)),
                ('relation', models.CharField(blank=True, max_length=100)),
                ('valid_upto', models.DateField(blank=True, null=True)),
                ('sum_insured_amount', models.CharField(blank=True, default='0', max_length=100)),
                ('ins_doc_upload', models.ImageField(blank=True, upload_to='ins_document/')),
                ('ins_id_upload', models.ImageField(blank=True, upload_to='ins_id_document/')),
                ('is_inactive', models.CharField(blank=True, max_length=100, null=True)),
                ('appointment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('update_status', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PatientTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField()),
                ('patient_email_address', models.EmailField(max_length=200)),
                ('patient_password', models.CharField(max_length=100)),
                ('patient_first_name', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('patient_date_of_birth', models.DateField()),
                ('patient_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100)),
                ('patient_address', models.CharField(max_length=200)),
                ('patient_phone_number', models.CharField(max_length=100)),
                ('patient_maritial_status', models.CharField(max_length=100)),
                ('patient_added_on', models.DateTimeField()),
                ('patient_verification_code', models.CharField(max_length=100)),
                ('email_verify', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Permanent_Access_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='PostDialysisDischargeSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('visit_id', models.CharField(max_length=100)),
                ('cause_ESRD', models.CharField(max_length=100)),
                ('d_of_d', models.CharField(max_length=100)),
                ('cc', models.CharField(max_length=100)),
                ('access', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('bp', models.CharField(max_length=100)),
                ('kt_v', models.CharField(max_length=100)),
                ('acc_qb', models.CharField(max_length=100)),
                ('out_come', models.CharField(max_length=100)),
                ('recommendant', models.CharField(max_length=100)),
                ('tca', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('nephrologist', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PostEquip_preparationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_equip_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pre_Procedural_Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reffering_doctor', models.CharField(max_length=100)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('other_name', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('cause_kidney_disease', models.CharField(max_length=1000)),
                ('Comorbidities', models.CharField(max_length=1000)),
                ('type1', models.CharField(max_length=1000)),
                ('site', models.CharField(max_length=1000)),
                ('duration_use', models.CharField(max_length=1000)),
                ('others', models.CharField(max_length=1000)),
                ('reason_last_accesss_failure', models.CharField(max_length=1000)),
                ('current_intend_access', models.CharField(max_length=1000)),
                ('reason_for_current_intended', models.CharField(max_length=1000)),
                ('procedure_notes', models.CharField(max_length=1000)),
                ('final_access_site', models.CharField(max_length=1000)),
                ('surgeon_name', models.CharField(max_length=100)),
                ('signature', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreDialysisAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('visit_id', models.CharField(max_length=100)),
                ('chest_auscultation_clear', models.BooleanField(default=False)),
                ('peripheral_edema', models.BooleanField(default=False)),
                ('pressure_limit_set', models.BooleanField(default=False)),
                ('Physical_Chest_pain_discompfort', models.BooleanField(default=False)),
                ('recent_surgery_injuries_trauma_bleeding', models.BooleanField(default=False)),
                ('intra_dialysis', models.BooleanField(default=False)),
                ('breakfast', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PreEquipPreparationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PresentingComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_date', models.DateField(auto_now_add=True, null=True)),
                ('presenting_comp', models.CharField(max_length=50)),
                ('initial_comp', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PresentingComplaintTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_date', models.DateField(auto_now_add=True, null=True)),
                ('presenting_comp', models.CharField(max_length=50)),
                ('initial_comp', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Preventory_Maintanence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_sub_id', models.CharField(max_length=100)),
                ('item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('item_model_no', models.CharField(max_length=100)),
                ('done_by', models.CharField(max_length=100)),
                ('done_date', models.CharField(max_length=100)),
                ('due_date', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=100)),
                ('delay_days', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Primary_dialysis_theropist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pri_dial_therop', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Procedure_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('admission_ID', models.CharField(max_length=100)),
                ('procedure_id', models.CharField(max_length=100)),
                ('service_name', models.CharField(max_length=100)),
                ('service_category', models.CharField(max_length=100)),
                ('service_sub_category', models.CharField(max_length=100)),
                ('service_department', models.CharField(max_length=100)),
                ('service_sub_department', models.CharField(max_length=100)),
                ('service_charge', models.CharField(max_length=100)),
                ('pro_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('service_category', models.CharField(max_length=100)),
                ('service_sub_category', models.CharField(max_length=100)),
                ('service_department', models.CharField(max_length=100)),
                ('service_sub_department', models.CharField(max_length=100)),
                ('service_charge', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=500)),
                ('profile_amount', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileMasterlinkTarrif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff_id', models.CharField(max_length=100)),
                ('profile_id', models.CharField(max_length=100)),
                ('apply_date', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(max_length=100)),
                ('service_department', models.CharField(max_length=100)),
                ('service_sub_department', models.CharField(max_length=100)),
                ('profile_name', models.CharField(max_length=100)),
                ('service_name', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(blank=True, max_length=100, null=True)),
                ('outsource', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileService_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(blank=True, max_length=100, null=True)),
                ('service_department', models.CharField(max_length=100)),
                ('service_sub_department', models.CharField(max_length=100)),
                ('total_services', models.CharField(blank=True, max_length=100, null=True)),
                ('outsource', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileService_temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileServiceSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Refered_by_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Staff_name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Refferal_Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reffering_doctor', models.CharField(blank=True, max_length=100, null=True)),
                ('refferal_hospital', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_last_name', models.CharField(max_length=100)),
                ('other_names', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('duration_dialysis', models.CharField(max_length=100)),
                ('cause_kidney', models.CharField(max_length=1000)),
                ('comorbidities', models.CharField(max_length=100)),
                ('reason', models.CharField(max_length=100)),
                ('current_medication', models.CharField(blank=True, max_length=1000, null=True)),
                ('dosage', models.CharField(blank=True, max_length=1000, null=True)),
                ('duration', models.CharField(blank=True, max_length=1000, null=True)),
                ('others', models.CharField(blank=True, max_length=1000, null=True)),
                ('procedural_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('created_by', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Refferal_notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('date', models.CharField(blank=True, max_length=100, null=True)),
                ('dr', models.CharField(max_length=100)),
                ('re', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('diagnosis', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RelationMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_name', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RIS_PendingInvestigation_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('visit_no', models.CharField(max_length=100)),
                ('status', models.CharField(default='active', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='RoomNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.IntegerField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule_Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Secondry_dialysis_theropist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sec_dial_therop', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_category', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_department', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_sub_category', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSubDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_sub_department', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(max_length=100)),
                ('test_charges', models.CharField(blank=True, default=0, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTest_records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('service_category', models.CharField(max_length=100)),
                ('service_sub_category', models.CharField(max_length=100)),
                ('service_department', models.CharField(max_length=100)),
                ('ServiceSubDepartment', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField()),
                ('logged_name', models.CharField(max_length=100)),
                ('methodology', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTestlinkTarrif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff_id', models.CharField(max_length=100)),
                ('service_test_id', models.CharField(max_length=100)),
                ('apply_date', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SessionNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('time', models.TimeField()),
                ('plan', models.TextField()),
                ('intervention', models.TextField()),
                ('evalution', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StoreMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=100)),
                ('parent_store', models.CharField(max_length=100)),
                ('wing', models.CharField(max_length=100)),
                ('floor', models.CharField(max_length=100)),
                ('store_type', models.CharField(choices=[('0', 'CPC'), ('1', 'MainStore'), ('2', 'SubStore')], max_length=100)),
                ('inactive', models.BooleanField()),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='StoreNursingCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storelinkId', models.CharField(max_length=100)),
                ('store', models.CharField(choices=[('store1', 'Store1'), ('store2', 'Store2')], max_length=100)),
                ('nursingcounter', models.CharField(choices=[('counter1', 'Counter1'), ('counter2', 'Counter2')], max_length=100)),
                ('department', models.CharField(choices=[('dept1', 'Dept1'), ('dept2', 'Dept2')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SuppliersTempTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TariffMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff_name', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TarifLinkOpdPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tariff_id', models.CharField(max_length=100)),
                ('opd_package_id', models.CharField(max_length=100)),
                ('apply_date', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Temporary_Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=50)),
                ('bill_id', models.CharField(max_length=50)),
                ('bill_date_time', models.CharField(max_length=50)),
                ('uhid', models.CharField(max_length=50)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(max_length=50)),
                ('corporate_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_group_id', models.CharField(blank=True, max_length=50, null=True)),
                ('net_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(max_length=50)),
                ('pay_amount', models.CharField(max_length=50)),
                ('paid_amount', models.CharField(max_length=50)),
                ('outstanding_amount', models.CharField(max_length=50)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TitleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TriageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('social_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed'), ('separated', 'Separated')], max_length=100, null=True)),
                ('tobacco', models.BooleanField(blank=True, default=False, null=True)),
                ('tobacco_frequency', models.CharField(blank=True, max_length=100, null=True)),
                ('alcohol', models.BooleanField(blank=True, default=False, null=True)),
                ('alcohol_frequency', models.CharField(blank=True, max_length=100, null=True)),
                ('OU', models.BooleanField(blank=True, default=False, null=True)),
                ('OU_corrected', models.BooleanField(blank=True, default=False, null=True)),
                ('OS', models.BooleanField(blank=True, default=False, null=True)),
                ('OS_corrected', models.BooleanField(blank=True, default=False, null=True)),
                ('OD', models.BooleanField(blank=True, default=False, null=True)),
                ('OD_corrected', models.BooleanField(blank=True, default=False, null=True)),
                ('heart_disease', models.BooleanField(blank=True, default=False, null=True)),
                ('diabetes', models.BooleanField(blank=True, default=False, null=True)),
                ('cancer', models.BooleanField(blank=True, default=False, null=True)),
                ('other_family_disease', models.CharField(blank=True, max_length=100, null=True)),
                ('alert', models.BooleanField(blank=True, default=False, null=True)),
                ('awake', models.BooleanField(blank=True, default=False, null=True)),
                ('oriented', models.BooleanField(blank=True, default=False, null=True)),
                ('unresponsive', models.BooleanField(blank=True, default=False, null=True)),
                ('response_to_pain', models.BooleanField(blank=True, default=False, null=True)),
                ('color_pink', models.BooleanField(blank=True, default=False, null=True)),
                ('color_palle', models.BooleanField(blank=True, default=False, null=True)),
                ('color_cyanosis', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_warm', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_cold', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_hot', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_dry', models.BooleanField(blank=True, default=False, null=True)),
                ('past_HTN', models.BooleanField(blank=True, default=False, null=True)),
                ('past_heart_disease', models.BooleanField(blank=True, default=False, null=True)),
                ('past_diabetes', models.BooleanField(blank=True, default=False, null=True)),
                ('past_cancer', models.BooleanField(blank=True, default=False, null=True)),
                ('past_HIV', models.BooleanField(blank=True, default=False, null=True)),
                ('past_TB', models.BooleanField(blank=True, default=False, null=True)),
                ('past_other_disease', models.CharField(blank=True, max_length=100, null=True)),
                ('past_surgery_gall_bladder', models.BooleanField(blank=True, default=False, null=True)),
                ('past_surgery_appendix', models.BooleanField(blank=True, default=False, null=True)),
                ('past_surgery_hernia', models.BooleanField(blank=True, default=False, null=True)),
                ('past_surgery_other', models.CharField(blank=True, max_length=100, null=True)),
                ('bleeding', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_intact', models.BooleanField(blank=True, default=False, null=True)),
                ('skin_other', models.CharField(blank=True, max_length=100, null=True)),
                ('shortness_of_breath', models.BooleanField(blank=True, default=False, null=True)),
                ('Coughing', models.BooleanField(blank=True, default=False, null=True)),
                ('visit_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('vital_bp', models.CharField(blank=True, max_length=100, null=True)),
                ('vital_pulse', models.CharField(blank=True, max_length=100, null=True)),
                ('vital_temp', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unplanned_Maintanence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_sub_id', models.CharField(max_length=100)),
                ('item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('item_model_no', models.CharField(max_length=100)),
                ('done_by', models.CharField(max_length=100)),
                ('problem_occure_date', models.CharField(max_length=100)),
                ('problem_name', models.CharField(max_length=30)),
                ('resolve_date', models.CharField(blank=True, max_length=30, null=True)),
                ('remark', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Validation_Calibration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_sub_id', models.CharField(max_length=100)),
                ('item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('item_model_no', models.CharField(max_length=100)),
                ('done_by', models.CharField(max_length=100)),
                ('schedule_name', models.CharField(max_length=100)),
                ('dispensive', models.CharField(max_length=100)),
                ('date_time', models.CharField(max_length=100)),
                ('validation_date', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Validation_record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(max_length=100)),
                ('uhid', models.CharField(max_length=100)),
                ('validated_by', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VendorMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=100)),
                ('vendor_short_name', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=100)),
                ('phone1', models.CharField(max_length=100)),
                ('phone2', models.CharField(max_length=100)),
                ('fax_no', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=100)),
                ('tax_id', models.CharField(max_length=100)),
                ('rating', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=100)),
                ('afc_code', models.CharField(blank=True, max_length=100, null=True)),
                ('type_char', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_mode', models.CharField(max_length=100)),
                ('payment_terms', models.CharField(max_length=100)),
                ('inactive', models.BooleanField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VisitTyoeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_type', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='VolumeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WardCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VitalSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('sys_bp', models.CharField(max_length=100)),
                ('dia_bp', models.CharField(max_length=100)),
                ('temp', models.CharField(max_length=100)),
                ('weight', models.IntegerField()),
                ('height', models.IntegerField()),
                ('bmi', models.CharField(max_length=100)),
                ('resp_rate', models.CharField(blank=True, max_length=100, null=True)),
                ('heart_rate', models.CharField(blank=True, max_length=100, null=True)),
                ('urine_output', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_sugar_f', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_sugar_r', models.CharField(blank=True, max_length=100, null=True)),
                ('spo2', models.CharField(blank=True, max_length=100, null=True)),
                ('avpu', models.CharField(blank=True, choices=[('A', 'A'), ('V', 'V'), ('P', 'P'), ('U', 'U')], max_length=100, null=True)),
                ('trauma', models.CharField(blank=True, choices=[('TRAUMA1', 'TRAUMA1'), ('TRAUMA2', 'TRAUMA2'), ('TRAUMA3', 'TRAUMA3'), ('TRAUMA4', 'TRAUMA4')], max_length=100, null=True)),
                ('mobility', models.CharField(blank=True, choices=[('MOBILITY1', 'MOBILITY1'), ('MOBILITY2', 'MOBILITY2'), ('MOBILITY3', 'MOBILITY3'), ('MOBILITY4', 'MOBILITY4')], max_length=100, null=True)),
                ('oxygen_supplementation', models.CharField(blank=True, choices=[('OXYZEN1', 'OXYZEN1'), ('OXYZEN2', 'OXYZEN2'), ('OXYZEN3', 'OXYZEN3'), ('OXYZEN4', 'OXYZEN4')], max_length=100, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('gcs', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_payment_no', models.CharField(max_length=50)),
                ('payment_datetime', models.DateField()),
                ('invoice_no', models.CharField(max_length=50)),
                ('grn_no', models.CharField(max_length=50)),
                ('grn_datetime', models.CharField(blank=True, max_length=50, null=True)),
                ('po_no', models.CharField(blank=True, max_length=50, null=True)),
                ('po_datetime', models.CharField(blank=True, max_length=50, null=True)),
                ('grn_amount', models.CharField(max_length=50)),
                ('paid_amount', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('po_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vp_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_Request_Mainstore_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_no', models.CharField(max_length=50)),
                ('request_date', models.DateField()),
                ('transfer_indent_no', models.CharField(max_length=50)),
                ('transfer_return_no', models.CharField(max_length=50)),
                ('item_issue_no', django_mysql.models.ListCharField(models.CharField(max_length=100), blank=True, max_length=1010, null=True, size=10)),
                ('intent_date', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('receive_status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('indent_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('request_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_request_store', to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_Request_Mainstore_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_no', models.CharField(max_length=50)),
                ('request_date', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('issued_qty', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('receive_status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_Intent_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trnasfer_indent_no', models.CharField(max_length=50)),
                ('intent_date', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('cpc_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trnasfer_temp_store', to='testapp.storemaster')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_Intent_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trnasfer_indent_no', models.CharField(max_length=50)),
                ('intent_date', models.DateField()),
                ('total_amount', models.CharField(max_length=50)),
                ('p_status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('cpc_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trnasfer_indent_store', to='testapp.storemaster')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_Intent_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trnasfer_indent_no', models.CharField(max_length=50)),
                ('intent_date', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('received_qty', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='TokenMasterConf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField()),
                ('status', models.CharField(choices=[('IN', 'IN'), ('OUT', 'OUT')], max_length=20)),
                ('Max_Token_Assigned', models.IntegerField()),
                ('Doct_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DoctorTable', to='testapp.doctortable')),
                ('Room_No', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.roomnumber')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='TokenCreations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(default=datetime.datetime.now)),
                ('Doct_id', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=100)),
                ('Patient_Id', models.CharField(max_length=100)),
                ('Patient_Name', models.CharField(max_length=200)),
                ('Token_No', models.CharField(max_length=20)),
                ('Doct_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
                ('Room_No', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.roomnumber')),
            ],
        ),
        migrations.CreateModel(
            name='TokenCreationDone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(auto_now_add=True)),
                ('Doct_id', models.CharField(max_length=100)),
                ('Doct_Name', models.CharField(max_length=100)),
                ('speciality', models.CharField(max_length=100)),
                ('Pt_Id', models.CharField(max_length=100)),
                ('Pt_Name', models.CharField(max_length=200)),
                ('Token_No', models.CharField(max_length=20)),
                ('Room_No', models.CharField(max_length=100)),
                ('status', models.CharField(default='Waiting', max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='TimeTaken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_name', models.CharField(max_length=200)),
                ('patient_id', models.CharField(max_length=200)),
                ('start_time', models.CharField(max_length=20)),
                ('end_time', models.CharField(max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Temp_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('temp_aces', models.CharField(max_length=500)),
                ('date_initiation', models.CharField(max_length=500)),
                ('date_removal', models.CharField(max_length=500)),
                ('remark', models.CharField(max_length=500)),
                ('hospital_name', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.access_site')),
                ('doctor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
            ],
        ),
        migrations.CreateModel(
            name='TariffChargeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply_From', models.DateField()),
                ('Ward_Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.wardcategory')),
                ('Ward_Type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.wardtype')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.tariffmaster')),
            ],
        ),
        migrations.CreateModel(
            name='StockLegder_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('particular', models.CharField(blank=True, max_length=50, null=True)),
                ('opening_balance', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_qty', models.CharField(max_length=50)),
                ('issue_qty', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('closing_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('closing_balance', models.CharField(max_length=50)),
                ('purchase_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PO_id', models.CharField(max_length=50)),
                ('serial_batch', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('expiry_date', models.DateField()),
                ('physical_qty', models.CharField(max_length=50)),
                ('free_qty', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_qty', models.CharField(max_length=50)),
                ('schema', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('tax_details', models.CharField(max_length=500)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GRN_id', models.CharField(max_length=50)),
                ('GRN_datetime', models.DateField()),
                ('PO_id', models.CharField(max_length=50)),
                ('PO_datetime', models.CharField(max_length=50)),
                ('invoice_no', models.CharField(max_length=50)),
                ('invoice_upload', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('basic_amount', models.CharField(max_length=50)),
                ('GRN_amount', models.CharField(max_length=50)),
                ('net_amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('paid_amount', models.CharField(max_length=50)),
                ('Payment_status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('po_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='se_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendar_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='StockEntry_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GRN_id', models.CharField(max_length=50)),
                ('GRN_datetime', models.DateTimeField()),
                ('PO_id', models.CharField(max_length=50)),
                ('item_qty', models.CharField(max_length=50)),
                ('serial_batch', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('expiry_date', models.DateField()),
                ('physical_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('free_qty', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_qty', models.CharField(max_length=50)),
                ('schema', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('tax_details', models.CharField(max_length=500)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('movement_status', models.CharField(max_length=50)),
                ('issue_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_BatchWise_Substore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('intent_no', models.CharField(max_length=50)),
                ('indent_date', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_batch', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('received_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('purchase_rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('adjust_qty', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('total_consume_qty', models.CharField(max_length=50)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receive_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Stock_BatchWise_Substore_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_BatchWise_Mainstore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('intent_no', models.CharField(max_length=50)),
                ('indent_date', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('received_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('adjust_qty', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('total_consume_qty', models.CharField(max_length=50)),
                ('transfer_status', models.CharField(blank=True, max_length=50, null=True)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receive_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stbm_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_BatchWise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GRN_id', models.CharField(max_length=50)),
                ('GRN_datetime', models.DateField()),
                ('PO_id', models.CharField(max_length=50)),
                ('PO_datetime', models.DateField(blank=True, null=True)),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.DateField()),
                ('received_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('adjust_qty', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('total_consume_qty', models.CharField(max_length=50)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('po_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stb_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendar_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='SlipCreation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=20)),
                ('patient_name', models.CharField(max_length=200)),
                ('Doctor_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
                ('Room_No', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.roomnumber')),
                ('select_token_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.tokencreations')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=100, null=True)),
                ('service_title', models.CharField(max_length=100)),
                ('service_short_name', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=100)),
                ('consent', models.BooleanField()),
                ('consent_name', models.CharField(max_length=100)),
                ('ipd', models.BooleanField()),
                ('nursing_charges', models.BooleanField()),
                ('opd', models.BooleanField()),
                ('preventing_health_check_up', models.BooleanField()),
                ('discount', models.BooleanField()),
                ('outsource', models.BooleanField()),
                ('emergency', models.BooleanField()),
                ('emergency_percentage', models.CharField(blank=True, max_length=100, null=True)),
                ('tally_ledger', models.BooleanField()),
                ('inactive', models.BooleanField()),
                ('due_not_allowed', models.BooleanField()),
                ('isProcedure', models.BooleanField()),
                ('Editable_Serv_Charge', models.BooleanField()),
                ('Service_Type', models.CharField(choices=[('type1', 'type_1'), ('type2', 'type_2'), ('type3', 'type_3'), ('type4', 'type_4')], max_length=100)),
                ('Card_Discount_Per', models.CharField(blank=True, max_length=100, null=True)),
                ('Billing_Group_Service_Code', models.CharField(blank=True, max_length=100, null=True)),
                ('Charges', models.FloatField(blank=True, default=0, null=True)),
                ('ServiceSubDepartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubdepartment')),
                ('service_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicecategory')),
                ('service_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('service_sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceChargeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_charge', models.CharField(max_length=50)),
                ('applicable_date', models.DateField()),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
                ('ipd_opd', models.CharField(blank=True, max_length=100, null=True)),
                ('inactive', models.BooleanField(blank=True, default=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicecategory')),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster')),
                ('service_sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubcategory')),
                ('tariff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.tariffmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Service_Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_category', models.CharField(max_length=100)),
                ('service_sub_category', models.CharField(max_length=100)),
                ('service_department', models.CharField(max_length=100)),
                ('ServiceSubDepartment', models.CharField(max_length=100)),
                ('infant_range', models.CharField(blank=True, max_length=100, null=True)),
                ('chield_range', models.CharField(blank=True, max_length=100, null=True)),
                ('male_range', models.CharField(blank=True, max_length=100, null=True)),
                ('female_range', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(max_length=100)),
                ('methodology', models.CharField(max_length=100)),
                ('test_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='SampleCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('lab_service_name', models.CharField(max_length=100)),
                ('type_of_sample', models.CharField(max_length=100)),
                ('Volume', models.CharField(max_length=100)),
                ('technician_name', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='SampleCollected',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('uhid', models.CharField(max_length=100)),
                ('visit_no', models.CharField(max_length=100)),
                ('bill_no', models.CharField(max_length=100)),
                ('profile_id', models.CharField(max_length=100)),
                ('profile_name', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('department', models.CharField(max_length=100)),
                ('sub_department', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('waiting', 'waiting'), ('completed', 'completed')], max_length=100)),
                ('source_status', models.CharField(blank=True, max_length=100, null=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('result_entry_at', models.DateTimeField(blank=True, null=True)),
                ('doctor_id', models.CharField(max_length=100)),
                ('outsource', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('result_entry_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_entry_by', to='testapp.createuser')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.createuser')),
            ],
        ),
        migrations.CreateModel(
            name='RIS_Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discerption', models.TextField()),
                ('conclusion', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('RIS_PendingInvestigation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.ris_pendinginvestigation_main')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.AddField(
            model_name='ris_pendinginvestigation_main',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster'),
        ),
        migrations.AddField(
            model_name='ris_pendinginvestigation_main',
            name='uhid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.patientsregistrationsallinone'),
        ),
        migrations.CreateModel(
            name='ReplicatedTokenMasterConf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField()),
                ('Doct_Name', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('Room_No', models.IntegerField()),
                ('Max_Token_Assigned', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='RadiologyTemplateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=100)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unit_id', models.CharField(max_length=50)),
                ('free_qty', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_qty', models.IntegerField()),
                ('rate', models.CharField(max_length=50)),
                ('selling_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('schema', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_amt', models.CharField(blank=True, max_length=500, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('tax_details', models.CharField(max_length=500)),
                ('status', models.CharField(max_length=500)),
                ('item_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('vendor_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PO_id', models.CharField(max_length=50)),
                ('PO_datetime', models.DateField()),
                ('net_amount', models.CharField(max_length=50)),
                ('basic_amt', models.CharField(max_length=50)),
                ('PO_status', models.CharField(max_length=50)),
                ('purpose', models.CharField(blank=True, max_length=50, null=True)),
                ('deliver_date', models.DateField(blank=True, null=True)),
                ('approval_status', models.CharField(max_length=50)),
                ('issue_status', models.CharField(max_length=50)),
                ('delete_status', models.CharField(blank=True, default='active', max_length=50, null=True)),
                ('Department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('Location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('po_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='po_location_name', to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendar_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PO_Id', models.CharField(max_length=50)),
                ('PO_datetime', models.DateField()),
                ('qty', models.IntegerField()),
                ('unit_id', models.CharField(max_length=50)),
                ('free_qty', models.CharField(blank=True, max_length=50, null=True)),
                ('stocy_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('selling_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('schema', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('tex_details', models.CharField(max_length=500)),
                ('received_qty', models.IntegerField()),
                ('issued_qty', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('issue_status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('assets', models.CharField(max_length=50)),
                ('delete_status', models.CharField(blank=True, default='active', max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase_Intent_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('cpc_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_temp_store', to='testapp.storemaster')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase_Intent_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('total_amount', models.CharField(max_length=50)),
                ('p_status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('cpc_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_indent_store', to='testapp.storemaster')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase_Intent_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PS_sales_return_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_no', models.CharField(max_length=50)),
                ('sales_return_id', models.CharField(max_length=50)),
                ('sales_date', models.CharField(max_length=50)),
                ('sales_return_date', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('reason', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PS_sales_return_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_return_id', models.CharField(max_length=50)),
                ('sales_return_date', models.DateTimeField()),
                ('sales_no', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=50, null=True)),
                ('sale_qty', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('sale_amount', models.CharField(max_length=50)),
                ('return_amount', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('discount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PS_sales_return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_no', models.CharField(max_length=50)),
                ('sales_return_id', models.CharField(max_length=50)),
                ('sales_date', models.CharField(max_length=50)),
                ('sales_return_date', models.DateTimeField()),
                ('item_id', models.CharField(max_length=50)),
                ('sale_qty', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('sale_amount', models.CharField(max_length=50)),
                ('return_amount', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('discount', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PS_Sales_Payement_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('op_sale_no', models.CharField(blank=True, max_length=50, null=True)),
                ('sale_date', models.DateTimeField()),
                ('mode_type', models.CharField(max_length=30)),
                ('bill_amt', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('pending_amount', models.FloatField(blank=True, null=True)),
                ('bank_no', models.CharField(blank=True, max_length=100, null=True)),
                ('card_no', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ref_number', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_nummber', models.CharField(blank=True, max_length=100, null=True)),
                ('card_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PS_CounterSale_Temp_OTC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.CharField(max_length=50)),
                ('mob_no', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.CharField(max_length=50)),
                ('mrp', models.CharField(blank=True, max_length=50, null=True)),
                ('qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('before_disc_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('moment_status', models.CharField(max_length=50)),
                ('reason', models.CharField(blank=True, max_length=50, null=True)),
                ('generic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.generic_master')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PS_CounterSale_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('mrp', models.CharField(blank=True, max_length=50, null=True)),
                ('qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('before_disc_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('moment_status', models.CharField(max_length=50)),
                ('reason', models.CharField(blank=True, max_length=50, null=True)),
                ('generic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.generic_master')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PS_CounterSale_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Op_sales_no', models.CharField(max_length=50)),
                ('sales_date', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('patient_name', models.CharField(max_length=50)),
                ('consultant_type', models.CharField(blank=True, max_length=50, null=True)),
                ('consultant_name', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(max_length=50)),
                ('age', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('panel', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('patient_type', models.CharField(blank=True, max_length=50, null=True)),
                ('opd_no', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('total_taxable_amount', models.CharField(max_length=50)),
                ('p_status', models.CharField(max_length=50)),
                ('paid_amount', models.IntegerField(default=0)),
                ('reason', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_status', models.CharField(blank=True, max_length=50, null=True)),
                ('return_status', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='PS_CounterSale_child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Op_sales_no', models.CharField(max_length=50)),
                ('sales_date', models.DateTimeField()),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('mrp', models.CharField(blank=True, max_length=50, null=True)),
                ('qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('before_disc_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('total_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('opening_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=50)),
                ('moment_status', models.CharField(max_length=50)),
                ('reason', models.CharField(blank=True, max_length=50, null=True)),
                ('grn_consume_hand_qty', models.CharField(max_length=50)),
                ('bill_status', models.CharField(blank=True, max_length=50, null=True)),
                ('return_status', models.CharField(blank=True, max_length=50, null=True)),
                ('return_qty', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('return_amount', models.CharField(blank=True, default=0, max_length=50, null=True)),
                ('order_id', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('generic_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.generic_master')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileChargeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_charge', models.CharField(max_length=50)),
                ('applicable_date', models.DateField()),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
                ('ipd_opd', models.CharField(blank=True, max_length=100, null=True)),
                ('inactive', models.BooleanField(blank=True, default=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('profile_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.profilemaster')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicecategory')),
                ('service_sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubcategory')),
                ('tariff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.tariffmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PresentingComplaintSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_date', models.DateField(auto_now_add=True, null=True)),
                ('presenting_comp', models.CharField(max_length=50)),
                ('initial_comp', models.TextField()),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.presentingcomplaint')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionDialysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('drid', models.CharField(blank=True, max_length=100, null=True)),
                ('prescription_date', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('s_date', models.CharField(blank=True, max_length=100, null=True)),
                ('e_date', models.CharField(blank=True, max_length=100, null=True)),
                ('dry_weight', models.CharField(blank=True, max_length=100, null=True)),
                ('dry_weight_date', models.CharField(blank=True, max_length=100, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('day1', models.CharField(blank=True, max_length=100, null=True)),
                ('shift1', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('day2', models.CharField(blank=True, max_length=100, null=True)),
                ('weekly', models.CharField(blank=True, max_length=100, null=True)),
                ('shift2', models.CharField(blank=True, max_length=100, null=True)),
                ('day3', models.CharField(blank=True, max_length=100, null=True)),
                ('shift3', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysis_membrane', models.CharField(blank=True, max_length=100, null=True)),
                ('day4', models.CharField(blank=True, max_length=100, null=True)),
                ('shift4', models.CharField(blank=True, max_length=100, null=True)),
                ('day5', models.CharField(blank=True, max_length=100, null=True)),
                ('shift5', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysate_temp', models.CharField(blank=True, max_length=100, null=True)),
                ('k_meql', models.CharField(blank=True, max_length=100, null=True)),
                ('ca_meal', models.CharField(blank=True, max_length=100, null=True)),
                ('mg_meal', models.CharField(blank=True, max_length=100, null=True)),
                ('glucose', models.CharField(blank=True, max_length=100, null=True)),
                ('target_bvp', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysate_flow', models.CharField(blank=True, max_length=100, null=True)),
                ('profile1', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_flow', models.CharField(blank=True, max_length=100, null=True)),
                ('profile2', models.CharField(blank=True, max_length=100, null=True)),
                ('bicarb', models.CharField(blank=True, max_length=100, null=True)),
                ('profile3', models.CharField(blank=True, max_length=100, null=True)),
                ('na_meql', models.CharField(blank=True, max_length=100, null=True)),
                ('profile4', models.CharField(blank=True, max_length=100, null=True)),
                ('uf_rate', models.CharField(blank=True, max_length=100, null=True)),
                ('ufr_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('initial_dose', models.CharField(blank=True, max_length=100, null=True)),
                ('interim_dose', models.CharField(blank=True, max_length=100, null=True)),
                ('total_heparin_bolus', models.CharField(blank=True, max_length=100, null=True)),
                ('hourly', models.CharField(blank=True, max_length=100, null=True)),
                ('cut_off_time', models.CharField(blank=True, max_length=100, null=True)),
                ('heparin_profile', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=500, null=True)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dialysis_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.dialysate_type')),
                ('dialyzer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.dialyzer')),
                ('dr_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
                ('heparin_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.heparin_type')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PreMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(blank=True, max_length=500, null=True)),
                ('no_of_days', models.IntegerField()),
                ('food_relations', models.CharField(blank=True, max_length=50, null=True)),
                ('route', models.CharField(blank=True, max_length=50, null=True)),
                ('instruction', models.CharField(max_length=500)),
                ('prescribe_date', models.DateField()),
                ('prescribed_date', models.DateField(auto_now_add=True, null=True)),
                ('end_date', models.DateField()),
                ('status', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PreEquipPreparationPreDialysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('visit_id', models.CharField(max_length=100)),
                ('name', models.ManyToManyField(blank=True, to='testapp.preequippreparationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Pre_Dialysis_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=30)),
                ('visit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('pre_post_dialysis', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('physian', models.CharField(max_length=100)),
                ('primary_dialysis_theraphy', models.CharField(max_length=100)),
                ('secondry_dialysis_theraphy', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('cannulation_nurse', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('machine_name', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_type', models.CharField(blank=True, max_length=100, null=True)),
                ('bruit_thrill', models.CharField(blank=True, max_length=100, null=True)),
                ('cannulation_name', models.CharField(blank=True, max_length=100, null=True)),
                ('access_site', models.CharField(blank=True, max_length=100, null=True)),
                ('access_site_infection', models.CharField(blank=True, max_length=100, null=True)),
                ('iso_uf', models.CharField(blank=True, max_length=100, null=True)),
                ('any_remark', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysis_type', models.CharField(blank=True, max_length=100, null=True)),
                ('other_staff', models.CharField(blank=True, max_length=100, null=True)),
                ('completion_status', models.CharField(blank=True, max_length=100, null=True)),
                ('needle_type', models.CharField(blank=True, max_length=100, null=True)),
                ('dialyser', models.CharField(blank=True, max_length=100, null=True)),
                ('bundle_volume', models.CharField(blank=True, max_length=100, null=True)),
                ('reprocess_number', models.CharField(blank=True, max_length=100, null=True)),
                ('reprocessed_date', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.CharField(blank=True, max_length=100, null=True)),
                ('single_used_dialyzer', models.CharField(blank=True, max_length=100, null=True)),
                ('bp_sitting_max', models.CharField(blank=True, max_length=50, null=True)),
                ('bp_sitting_min', models.CharField(blank=True, max_length=50, null=True)),
                ('bp_standing_max', models.CharField(blank=True, max_length=50, null=True)),
                ('bp_standing_min', models.CharField(blank=True, max_length=50, null=True)),
                ('respiration', models.CharField(blank=True, max_length=50, null=True)),
                ('pulse_sitting', models.CharField(blank=True, max_length=50, null=True)),
                ('pulse_standing', models.CharField(blank=True, max_length=50, null=True)),
                ('tempreture', models.CharField(blank=True, max_length=50, null=True)),
                ('measured_wt', models.CharField(blank=True, max_length=50, null=True)),
                ('wheelchair_wt', models.CharField(blank=True, max_length=50, null=True)),
                ('prosthetic_wt', models.CharField(blank=True, max_length=50, null=True)),
                ('condition_assessment', models.CharField(blank=True, max_length=100, null=True)),
                ('assessment', models.CharField(blank=True, max_length=100, null=True)),
                ('current_wt', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_wt', models.CharField(blank=True, max_length=100, null=True)),
                ('weight_change', models.CharField(blank=True, max_length=100, null=True)),
                ('dry_wt_date', models.CharField(blank=True, max_length=100, null=True)),
                ('target_wt', models.CharField(blank=True, max_length=100, null=True)),
                ('excess', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
                ('target_UF_Vol_kg', models.CharField(blank=True, max_length=100, null=True)),
                ('target_UFR_vol_kg_hr', models.CharField(blank=True, max_length=100, null=True)),
                ('anticoagulation', models.CharField(blank=True, max_length=100, null=True)),
                ('heparin_type', models.CharField(blank=True, max_length=100, null=True)),
                ('initial_dose', models.CharField(blank=True, max_length=100, null=True)),
                ('interim_Dose', models.CharField(blank=True, max_length=100, null=True)),
                ('total_heparin_bolus', models.CharField(blank=True, max_length=100, null=True)),
                ('hourly', models.CharField(blank=True, max_length=100, null=True)),
                ('unit_in_syringe', models.CharField(blank=True, max_length=100, null=True)),
                ('dialysis_odometer_str_reading', models.CharField(blank=True, max_length=100, null=True)),
                ('pre_dialysis_assessment', models.CharField(blank=True, max_length=100, null=True)),
                ('notes_pre_dialysis_session', models.CharField(blank=True, max_length=100, null=True)),
                ('fluids_volume_ml', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PostEquip_preparation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('post_preparation', models.ManyToManyField(to='testapp.postequip_preparationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PostDialysisDishchargeMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outs_ource_med_name', models.CharField(blank=True, max_length=100, null=True)),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.postdialysisdischargesheet')),
                ('post_med_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Post_Dialysis_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_id', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=50)),
                ('closing_attendent', models.CharField(max_length=50)),
                ('completion_status', models.CharField(max_length=50)),
                ('end_time', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('next_day_dialysis', models.CharField(max_length=50)),
                ('shift', models.CharField(max_length=50)),
                ('bp_sitting_max', models.CharField(max_length=50)),
                ('bp_sitting_min', models.CharField(max_length=50)),
                ('bp_standing_max', models.CharField(max_length=50)),
                ('bp_standing_min', models.CharField(max_length=50)),
                ('respiration', models.CharField(max_length=50)),
                ('pulse_sitting', models.CharField(max_length=50)),
                ('pulse_standing', models.CharField(max_length=50)),
                ('tempreture', models.CharField(max_length=50)),
                ('measured_wt', models.CharField(max_length=50)),
                ('wheelchair_wt', models.CharField(max_length=50)),
                ('prosthetic_wt', models.CharField(max_length=50)),
                ('condition_assessment', models.CharField(max_length=50)),
                ('prolonged_bleeding_at_punctured_sites', models.CharField(max_length=50)),
                ('weight_lost', models.CharField(max_length=50)),
                ('fluid_removed', models.CharField(max_length=50)),
                ('uf_rate', models.CharField(max_length=50)),
                ('heparin_Left', models.CharField(max_length=50)),
                ('total_heparin_infused', models.CharField(max_length=50)),
                ('dialyzer_rating', models.CharField(max_length=50)),
                ('bruit_thrill', models.CharField(max_length=50)),
                ('minimum_BP_max', models.CharField(max_length=50)),
                ('minimum_BP_min', models.CharField(max_length=50)),
                ('minimum_BP_time', models.CharField(max_length=50)),
                ('dialysis_odometer_end_eading', models.CharField(max_length=50)),
                ('completion_notes', models.TextField()),
                ('next_pre_dialysis_notes', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Permanent_Access',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('date_initiation', models.CharField(max_length=500)),
                ('date_failure', models.CharField(max_length=500)),
                ('remark', models.CharField(max_length=500)),
                ('hospital_name', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.access_site')),
                ('doctor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
                ('prim_aces', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.permanent_access_master')),
            ],
        ),
        migrations.CreateModel(
            name='PendingInvestigation_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('uhid', models.CharField(max_length=100)),
                ('visit_no', models.CharField(max_length=100)),
                ('bill_no', models.CharField(max_length=100)),
                ('profile_id', models.CharField(max_length=100)),
                ('profile_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('sub_department', models.CharField(max_length=100)),
                ('outsource', models.BooleanField(default=False)),
                ('date_time', models.DateTimeField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PatientVisitMains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50)),
                ('visit_date_time', models.DateTimeField(auto_now_add=True)),
                ('visit_id', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('claim_no', models.CharField(blank=True, default='Not Initiated', max_length=500, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(blank=True, default='open', max_length=500, null=True)),
                ('insurance_name', models.CharField(blank=True, max_length=50, null=True)),
                ('uv_id', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.billinggroup')),
                ('clinical_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.clinicalordepartment')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('visit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.visittyoemaster')),
            ],
        ),
        migrations.CreateModel(
            name='PatientRegistrationSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('registration_date_and_time', models.DateTimeField(auto_now_add=True)),
                ('blood_group', models.CharField(blank=True, max_length=50, null=True)),
                ('marital_status', models.CharField(max_length=50)),
                ('father_or_husband_name', models.CharField(max_length=100)),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=300)),
                ('referred_by', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('pin_code', models.CharField(max_length=8)),
                ('aadhar_card', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('pan_card', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('emergency_contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_num', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_contact_number', models.CharField(blank=True, max_length=20)),
                ('nationality', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('staff_member', models.CharField(blank=True, max_length=100, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('allow_photo_at_nursing_station', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('notable', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PatientRegistrationMains',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PatientBillingInfos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=50, unique=True)),
                ('in_cash', models.CharField(blank=True, max_length=100, null=True)),
                ('is_senior_citizen', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_group', models.CharField(max_length=100)),
                ('nhif_ins_cor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nhif_ins_cor_id', models.CharField(blank=True, max_length=100, null=True)),
                ('card_number', models.CharField(blank=True, max_length=100, null=True)),
                ('relation', models.CharField(blank=True, max_length=100)),
                ('valid_upto', models.DateTimeField(auto_now=True, null=True)),
                ('sum_insured_amount', models.CharField(blank=True, max_length=100)),
                ('is_inactive', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PackageChargeMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_charge', models.CharField(max_length=50)),
                ('applicable_date', models.DateField()),
                ('desc', models.CharField(blank=True, max_length=100, null=True)),
                ('ipd_opd', models.CharField(blank=True, max_length=100, null=True)),
                ('inactive', models.BooleanField(blank=True, default=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('package_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.opdpackagemaster')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicecategory')),
                ('service_sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubcategory')),
                ('tariff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.tariffmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OpdPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(max_length=50)),
                ('visit_id', models.CharField(max_length=50)),
                ('mode_type', models.CharField(max_length=30)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('pending_amount', models.FloatField(blank=True, null=True)),
                ('bank_no', models.CharField(blank=True, max_length=100, null=True)),
                ('card_no', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ref_number', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_nummber', models.CharField(blank=True, max_length=100, null=True)),
                ('card_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('receipt_no', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OpdPackageService_temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('rate', models.FloatField()),
                ('net_amount', models.FloatField()),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('package_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.opdpackagemaster')),
                ('profile_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.profilemaster')),
                ('service_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('service_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster')),
                ('service_sub_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubdepartment')),
            ],
        ),
        migrations.CreateModel(
            name='OpdPackageService_main',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.CharField(max_length=100)),
                ('total_services', models.CharField(max_length=100)),
                ('before_total_amt', models.CharField(max_length=100)),
                ('total_discount', models.CharField(max_length=100)),
                ('after_total_amt', models.CharField(max_length=100)),
                ('package_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.opdpackagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='OpdPackageService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_id', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('rate', models.FloatField()),
                ('net_amount', models.FloatField()),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('package_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.opdpackagemaster')),
                ('profile_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.profilemaster')),
                ('service_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('service_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicemaster')),
                ('service_sub_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubdepartment')),
            ],
        ),
        migrations.CreateModel(
            name='OPDBillSettlementTemp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=500)),
                ('visit_id', models.CharField(max_length=500)),
                ('bill_no', models.CharField(max_length=500)),
                ('bill_date', models.CharField(max_length=500)),
                ('bill_amt', models.CharField(max_length=500)),
                ('payer', models.CharField(max_length=500)),
                ('tax', models.CharField(max_length=500)),
                ('paymennt_mode', models.CharField(blank=True, max_length=500, null=True)),
                ('cheque_no', models.CharField(blank=True, max_length=500, null=True)),
                ('receivable_amt', models.CharField(blank=True, max_length=500, null=True)),
                ('received_amt', models.CharField(blank=True, max_length=500, null=True)),
                ('outstanding_amt', models.CharField(blank=True, max_length=500, null=True)),
                ('settle_date_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=500, null=True)),
                ('status2', models.CharField(blank=True, max_length=500, null=True)),
                ('claim_no', models.CharField(blank=True, max_length=300, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=300, null=True)),
                ('refrence_id', models.CharField(blank=True, max_length=300, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingTemper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=500, null=True)),
                ('visit_no', models.CharField(blank=True, max_length=500, null=True)),
                ('temp_bill_no', models.CharField(blank=True, max_length=500, null=True)),
                ('Pr_Opd_sr_bill_no', models.CharField(blank=True, max_length=500, null=True)),
                ('package_profile_id', models.CharField(blank=True, default='None', max_length=50, null=True)),
                ('package_profile_amt', models.CharField(blank=True, default='None', max_length=50, null=True)),
                ('service_name', models.CharField(blank=True, max_length=500, null=True)),
                ('rate', models.CharField(blank=True, max_length=500, null=True)),
                ('discount', models.CharField(blank=True, max_length=500, null=True)),
                ('unit', models.CharField(blank=True, max_length=500, null=True)),
                ('net_ammount', models.CharField(blank=True, max_length=500, null=True)),
                ('outstanding_amount', models.CharField(blank=True, max_length=500, null=True)),
                ('total_amount', models.CharField(blank=True, max_length=500, null=True)),
                ('receive_amount', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(blank=True, default='Open', max_length=500, null=True)),
                ('order_id', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('service_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicecategory')),
                ('service_sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicesubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(max_length=50)),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('temp_bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('package_profile_id', models.CharField(blank=True, max_length=50, null=True)),
                ('package_profile_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(blank=True, max_length=50, null=True)),
                ('corporate_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_group_id', models.CharField(blank=True, max_length=50, null=True)),
                ('service_id', models.CharField(max_length=50)),
                ('charges', models.FloatField()),
                ('unit', models.IntegerField()),
                ('pay_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('outstanding_amount', models.FloatField(blank=True, null=True)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amount', models.FloatField()),
                ('discount', models.FloatField()),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=20)),
                ('service_category', models.CharField(blank=True, max_length=50, null=True)),
                ('service_sub_category', models.CharField(blank=True, max_length=50, null=True)),
                ('order_id', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OPDBillingPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('visit_no', models.CharField(max_length=100)),
                ('bill_no', models.CharField(max_length=100)),
                ('package_id', models.CharField(max_length=100)),
                ('package_name', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OpdBillingMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=50)),
                ('bill_id', models.CharField(max_length=50)),
                ('bill_date_time', models.DateTimeField(auto_now_add=True)),
                ('uhid', models.CharField(max_length=50)),
                ('temp_bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('doctor_name', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(max_length=50)),
                ('corporate_id', models.CharField(blank=True, max_length=50, null=True)),
                ('billing_group_id', models.CharField(blank=True, max_length=50, null=True)),
                ('package_profile_id', models.CharField(blank=True, max_length=50, null=True)),
                ('net_amount', models.CharField(max_length=50)),
                ('discount', models.CharField(max_length=50)),
                ('pay_amount', models.CharField(max_length=50)),
                ('paid_amount', models.CharField(max_length=50)),
                ('outstanding_amount', models.CharField(max_length=50)),
                ('payment_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('paid_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('paid_amt_update_date', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='active', max_length=50)),
                ('checklist_status', models.CharField(blank=True, default='pending', max_length=50, null=True)),
                ('claim_status', models.CharField(blank=True, default='pending', max_length=50, null=True)),
                ('claim_amt', models.CharField(blank=True, default='pending', max_length=50, null=True)),
                ('lou_no', models.CharField(blank=True, max_length=50, null=True)),
                ('claim_no', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=50, null=True)),
                ('paid_claim_amt', models.IntegerField(blank=True, default=0, null=True)),
                ('insurance_amt', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='OPDBillDiscountRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('authorised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorised_discount_remarks', to='testapp.authorizedperson')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_discount_remarks', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='NewAppointmentByAdminChooseDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('doctor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
            ],
        ),
        migrations.CreateModel(
            name='Material_Intent_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('substore_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_temp_store', to='testapp.storemaster')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Material_Intent_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('total_amount', models.CharField(max_length=50)),
                ('p_status', models.CharField(max_length=50)),
                ('approval_status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('main_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('substore_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_indent_store', to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Material_Intent_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_id', models.CharField(max_length=50)),
                ('intent_datetime', models.DateField()),
                ('priority', models.CharField(max_length=50)),
                ('quantity', models.CharField(max_length=50)),
                ('received_qty', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('item_belongs_to', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Manual_Stock_Adjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_id', models.CharField(max_length=50)),
                ('adjustment_date', models.DateTimeField()),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('adjust_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Makepo_PI_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateField()),
                ('unit_id', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('stock_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='MakeItem_return_ToCPC_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('batch_no', models.CharField(blank=True, max_length=50, null=True)),
                ('total_qty', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(blank=True, max_length=50, null=True)),
                ('rate', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amt', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='MakeItem_return_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_qty', models.CharField(max_length=50)),
                ('batch_no', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=50, null=True)),
                ('rate', models.CharField(blank=True, max_length=50, null=True)),
                ('total_amt', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='LabTemplateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_name', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('status', models.CharField(max_length=100)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.profilemaster')),
            ],
        ),
        migrations.CreateModel(
            name='LabResultEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PTID', models.CharField(max_length=100)),
                ('test_id', models.CharField(max_length=100)),
                ('profile_id', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_name', models.CharField(max_length=100)),
                ('service_name', models.CharField(max_length=100)),
                ('range', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=100, null=True)),
                ('units', models.CharField(blank=True, max_length=100, null=True)),
                ('outsource', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('in_range', 'in_range'), ('out_range', 'out_range')], max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='ItemsubcategoryMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemsubcategory', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('itemcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.itemcategorymaster')),
            ],
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_reuse', models.CharField(max_length=100)),
                ('serial_batch_control', models.CharField(max_length=100)),
                ('reusable_rate', models.CharField(max_length=100)),
                ('item_name', models.CharField(max_length=100)),
                ('shortcode', models.CharField(max_length=100)),
                ('contain', models.CharField(max_length=100)),
                ('conversion_factor', models.CharField(max_length=100)),
                ('hsn_code', models.CharField(max_length=100)),
                ('hospital_item_code', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=100)),
                ('Gst', models.CharField(choices=[('gst1', 'Gst1'), ('gst2', 'Gst2')], max_length=100)),
                ('min_quantity', models.CharField(max_length=100)),
                ('max_quantity', models.CharField(max_length=100)),
                ('re_order_level', models.CharField(max_length=100)),
                ('belongs_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.itembelongstomaster')),
                ('item_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.itemcategorymaster')),
                ('packing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.packagigmaster')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.itemunitmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Transfer_Issue_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('issued_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('remark', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Status_Particular_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('particular', models.CharField(blank=True, max_length=50, null=True)),
                ('opening_balance', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('purchase_qty', models.CharField(max_length=50)),
                ('issue_qty', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('closing_cost', models.CharField(max_length=50)),
                ('closing_balance', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Return_ToCPC_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_no', models.CharField(max_length=50)),
                ('return_date', models.DateTimeField()),
                ('request_no', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_transfer', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('indent_store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indent_store', to='testapp.storemaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receiving_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_return_receive_store', to='testapp.storemaster')),
                ('return_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_return_cpc_store', to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Return_ToCPC_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_no', models.CharField(max_length=50)),
                ('return_date', models.DateTimeField()),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('stock_transfer', models.CharField(max_length=50)),
                ('movable_status', models.CharField(blank=True, max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Return_Supplier_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_return_no', models.CharField(max_length=50)),
                ('return_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('vendor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.vendormaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Return_Supplier_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_return_no', models.CharField(max_length=50)),
                ('return_date', models.DateField()),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('return_amount', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('movement_status', models.CharField(blank=True, max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Return_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_return_no', models.CharField(max_length=50)),
                ('return_date', models.DateTimeField()),
                ('status', models.CharField(max_length=50)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receiving_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('return_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_return_store', to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_return_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_return_no', models.CharField(max_length=50)),
                ('return_date', models.DateTimeField()),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('return_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('movable_status', models.CharField(blank=True, max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Issue_ToSubStore_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('intent_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('approved_by', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('p_status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('issue_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_location1', to='testapp.locationmaster')),
                ('issued_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_store1', to='testapp.storemaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receive_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receive_location1', to='testapp.locationmaster')),
                ('received_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Issue_ToSubStore_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('intent_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_batch', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('issued_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('purchase_rate', models.CharField(blank=True, max_length=50, null=True)),
                ('intent_qty', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('remark', models.CharField(blank=True, max_length=50, null=True)),
                ('priority', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('movement_status', models.CharField(blank=True, max_length=50, null=True)),
                ('issued_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Issue_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_no', models.CharField(max_length=50)),
                ('priority', models.CharField(max_length=50)),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_batch', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('issued_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('intent_qty', models.CharField(max_length=50)),
                ('remaining_qty', models.CharField(max_length=50)),
                ('remark', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Issue_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('intent_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('approved_by', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('transfer_status', models.CharField(blank=True, max_length=50, null=True)),
                ('p_status', models.CharField(max_length=50)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('issue_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_location', to='testapp.locationmaster')),
                ('issued_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_indent_store1', to='testapp.storemaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('receive_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receive_location', to='testapp.locationmaster')),
                ('received_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Issue_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_issue_no', models.CharField(max_length=50)),
                ('intent_no', models.CharField(max_length=50)),
                ('item_issue_date', models.DateTimeField()),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_batch', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('available_qty', models.CharField(max_length=50)),
                ('issued_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('intent_qty', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('total_cost', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('remark', models.CharField(blank=True, max_length=50, null=True)),
                ('priority', models.CharField(max_length=50)),
                ('amount', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('transfer_status', models.CharField(blank=True, max_length=50, null=True)),
                ('movement_status', models.CharField(blank=True, max_length=50, null=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationProcedureSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('investigation_and_procedure', models.CharField(max_length=200)),
                ('status', models.BooleanField()),
                ('result_status', models.CharField(blank=True, max_length=50, null=True)),
                ('ot_required', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.diagnosis')),
            ],
        ),
        migrations.CreateModel(
            name='Investigation_Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation_id', models.CharField(max_length=50)),
                ('investigation_date', models.DateField(max_length=50)),
                ('supervisor_name', models.CharField(max_length=50)),
                ('comments_by_supervisor', models.CharField(max_length=50)),
                ('comments_by_quality_manager', models.CharField(max_length=50)),
                ('risk_assessment_score', models.CharField(max_length=50)),
                ('investigation_done_by', models.CharField(max_length=50)),
                ('investigation_outcome', models.CharField(max_length=50)),
                ('final_summary', models.CharField(max_length=255)),
                ('contributing_factors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inves_contributing_factor', to='testapp.contributing_factors_master')),
                ('incident_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inves_incident_no', to='testapp.incident_creation_form')),
            ],
        ),
        migrations.AddField(
            model_name='inventory_itemmaster',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment'),
        ),
        migrations.AddField(
            model_name='inventory_itemmaster',
            name='generic_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.generic_master'),
        ),
        migrations.AddField(
            model_name='inventory_itemmaster',
            name='item_subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.itemsubcategorymaster'),
        ),
        migrations.CreateModel(
            name='Insurance_Raising_Queries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=255)),
                ('bill_datetime', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('bill_amt', models.CharField(max_length=50)),
                ('net_amt', models.CharField(max_length=50)),
                ('question', models.CharField(max_length=50)),
                ('answer', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance_Payement_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_no', models.CharField(blank=True, max_length=50, null=True)),
                ('pay_type', models.CharField(blank=True, max_length=50, null=True)),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(max_length=50)),
                ('mode_type', models.CharField(max_length=30)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('pending_amount', models.FloatField(blank=True, null=True)),
                ('bank_no', models.CharField(blank=True, max_length=100, null=True)),
                ('card_no', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_by', models.CharField(blank=True, max_length=100, null=True)),
                ('ref_number', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_nummber', models.CharField(blank=True, max_length=100, null=True)),
                ('card_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance_Claim_Acknowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(max_length=255)),
                ('bill_datetime', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('bill_amt', models.CharField(max_length=50)),
                ('net_amt', models.CharField(max_length=50)),
                ('claim_amt', models.CharField(max_length=50)),
                ('acknowledge', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance_Checklist_Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_no', models.CharField(max_length=255)),
                ('checklist_date', models.DateField()),
                ('bill_no', models.CharField(max_length=255)),
                ('lou_no', models.CharField(max_length=255)),
                ('claim_no', models.CharField(max_length=255)),
                ('batch_no', models.CharField(max_length=255)),
                ('bill_datetime', models.DateTimeField()),
                ('uhid', models.CharField(max_length=50)),
                ('bill_amt', models.CharField(max_length=50)),
                ('net_amt', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance_Checklist_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklist_no', models.CharField(max_length=255)),
                ('checklist_date', models.DateField()),
                ('document_name', models.CharField(max_length=255)),
                ('prepare_status', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.AddField(
            model_name='incident_creation_form',
            name='incident_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incident_creation', to='testapp.incident_type_master'),
        ),
        migrations.CreateModel(
            name='Estimate_bill_sub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=30, null=True)),
                ('name', models.CharField(max_length=30)),
                ('age', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=30)),
                ('contact_no', models.CharField(max_length=30)),
                ('services', models.CharField(blank=True, max_length=300, null=True)),
                ('services_rate', models.CharField(blank=True, max_length=300, null=True)),
                ('billing_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.billinggroup')),
            ],
        ),
        migrations.CreateModel(
            name='EmrInfoRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_record_type', models.CharField(blank=True, choices=[('nurse_notes', 'nurse_notes'), ('doctor_prescription', 'doctor_prescription'), ('lab_report', 'lab_report'), ('patient_history', 'patient_history'), ('clinical_notes', 'clinical_notes'), ('consultant_notes', 'consultant_notes'), ('consultant_order', 'consultant_order'), ('medical_details', 'medical_details')], max_length=100, null=True)),
                ('medical_record_file', models.FileField(null=True, upload_to='medical_record/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('emrinfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emrinfo_record', to='testapp.emrinfo')),
            ],
        ),
        migrations.AddField(
            model_name='doctortable',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster'),
        ),
        migrations.CreateModel(
            name='DoctorScheduleTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_schedule_date', models.DateField()),
                ('doctor_schedule_start_time', models.TimeField()),
                ('doctor_schedule_end_time', models.TimeField()),
                ('average_consulting_time', models.TimeField()),
                ('doctor_schedule_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], max_length=200)),
                ('select_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('doctor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.doctortable')),
            ],
        ),
        migrations.CreateModel(
            name='DoctorAccounting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=300, null=True)),
                ('service_rate', models.CharField(blank=True, max_length=300, null=True)),
                ('tariff_id', models.CharField(blank=True, max_length=300, null=True)),
                ('doctor_id', models.CharField(blank=True, max_length=300, null=True)),
                ('doctor_share', models.CharField(max_length=300)),
                ('hospital_share', models.CharField(max_length=300)),
                ('date', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.CreateModel(
            name='DialysisSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(max_length=100)),
                ('schedule_id', models.CharField(max_length=100, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('sub_dept', models.CharField(max_length=100)),
                ('shifting_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.shift')),
            ],
        ),
        migrations.CreateModel(
            name='DialysisPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('namw1', models.CharField(max_length=100)),
                ('name2', models.CharField(max_length=100)),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.postdialysisdischargesheet')),
            ],
        ),
        migrations.CreateModel(
            name='DialysisDishchargeMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('med_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dosage', models.CharField(blank=True, max_length=100, null=True)),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.postdialysisdischargesheet')),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisSub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_id', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_id', models.CharField(blank=True, max_length=100, null=True)),
                ('diagnosis', models.CharField(blank=True, max_length=50, null=True)),
                ('D_GRG_Code', models.CharField(blank=True, max_length=100, null=True)),
                ('visit_date', models.DateField(auto_now_add=True)),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.diagnosis')),
            ],
        ),
        migrations.CreateModel(
            name='Detailed_ItemStatus_Temp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('opening_balance', models.CharField(max_length=50)),
                ('opening_cost', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(max_length=50)),
                ('closing_balance', models.CharField(max_length=50)),
                ('closing_cost', models.CharField(max_length=50)),
                ('purchase_qty', models.CharField(max_length=50)),
                ('consume_qty', models.CharField(max_length=50)),
                ('in_hand_qty', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
            ],
        ),
        migrations.CreateModel(
            name='Department_Consumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption_No', models.CharField(max_length=50)),
                ('consumption_date', models.DateTimeField(auto_now_add=True)),
                ('batch_no', models.CharField(max_length=50)),
                ('expiry_date', models.CharField(max_length=50)),
                ('consumption_qty', models.CharField(max_length=50)),
                ('inhand_qty', models.CharField(max_length=50)),
                ('rate', models.CharField(max_length=50)),
                ('total_amount', models.CharField(max_length=50)),
                ('remark', models.CharField(max_length=500)),
                ('status', models.CharField(max_length=50)),
                ('total_qty', models.CharField(max_length=50)),
                ('opening_balance', models.CharField(max_length=50)),
                ('transaction_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('total_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('opening_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('grn_consume_hand_qty', models.CharField(max_length=50)),
                ('movement_status', models.CharField(blank=True, default='Consume Entry', max_length=50, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.inventory_itemmaster')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.storemaster')),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_no', models.CharField(blank=True, max_length=50, null=True)),
                ('bill_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('uhid', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('visit_no', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('net_payable_amt', models.FloatField(blank=True, null=True)),
                ('paid_amt', models.FloatField(blank=True, null=True)),
                ('patient_paid_amt', models.FloatField(blank=True, default=0, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='testapp.locationmaster')),
            ],
        ),
        migrations.AddField(
            model_name='createuser',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='testapp.servicedepartment'),
        ),
        migrations.AddField(
            model_name='createuser',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='create_user_location', to='testapp.locationmaster'),
        ),
        migrations.AddField(
            model_name='createuser',
            name='login_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='createuser',
            name='store',
            field=models.ManyToManyField(blank=True, related_name='create_user_store', to='testapp.storemaster'),
        ),
    ]
